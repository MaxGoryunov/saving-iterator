environment:
  # Use this matrix as an example
  matrix:

    # Specify matrix item for your app
    - PHP_VERSION: 7.3
      VC_VERSION: 15
      BUILD_TYPE: nts-Win32
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015

  # Specify required PHP SDK binary tools if you need SDK
  PHP_SDK_VERSION: 2.1.9

  PHP_AVM: https://raw.githubusercontent.com/sergeyklay/php-appveyor/master/php-appveyor.psm1

# Cache PHP and tooling
cache:
  # The C:\Downloads directory will be used as a storage for downloaded archives.
  # So you may want to cache it.
  - 'C:\Downloads -> .appveyor.yml'

# Specify required architecture.
# Supported architectures are ``x86`` and ``x64``
platform:
  - x64

install:
  # Download php-appveyor.psm1 module and invoke it to the current session
  - ps: (new-object Net.WebClient).DownloadString($Env:PHP_AVM) | iex

  - ps: InstallPhpSdk     $Env:PHP_SDK_VERSION $Env:VC_VERSION $Env:PLATFORM
  - ps: InstallPhp        $Env:PHP_VERSION $Env:BUILD_TYPE $Env:VC_VERSION $Env:PLATFORM
  - ps: InstallPhpDevPack $Env:PHP_VERSION $Env:BUILD_TYPE $Env:VC_VERSION $Env:PLATFORM

  # An example to install PECL extension
  - ps: >-
      InstallPeclExtension `
        -Name       psr `
        -Version    0.6.1 `
        -PhpVersion $Env:PHP_VERSION `
        -BuildType  $Env:BUILD_TYPE `
        -VC         $Env:VC_VERSION `
        -Platform   $Env:PLATFORM

  # An example to enable PHP extension
  - ps: >-
      EnablePhpExtension `
        -Name          my_ext `
        -PhpPath       C:\php `       # Optional
        -ExtPath       C:\my_ext `    # Optional
        -PrintableName "My Extension" # Optional

build_script:
  # Your code here
#--------------------------------
build: false
platform:
  - x64
clone_folder: c:\projects\saving-iterator

environment:
  matrix:
    - php_ver_target: 8.0

init:
  - SET COMPOSER_NO_INTERACTION=1

## Install PHP and composer, and run the appropriate composer command
install:
  - ps: Invoke-WebRequest "https://raw.githubusercontent.com/ChadSikorra/ps-install-php/master/Install-PHP.ps1" -OutFile "Install-PHP.ps1"
  - ps: .\Install-PHP.ps1 -Version $Env:php_ver_target -Highest -Arch x64 -Extensions mbstring,intl,openssl,curl
  - rm .\Install-PHP.ps1
  - refreshenv
  - mkdir C:\composer
  - cd C:\composer
  - php -r "readfile('http://getcomposer.org/installer');" | php
  - powershell -command "(Get-Item C:\composer\composer.phar).length"
  - powershell -command "'@php C:\composer\composer.phar ' + $([char]37) + '*' | Out-File C:\composer\composer.bat -Encoding ASCII"
  - SET PATH=C:\composer;%PATH%
  - cd c:\projects\saving-iterator
  - composer install --no-progress --profile

## Run the actual test
test_script:
  - cd c:\projects\saving-iterator
  # PHPUnit tests
  - vendor/bin/phpunit --coverage-text --configuration phpunit.xml
  # Coverage files
  - XDEBUG_MODE=coverage ./vendor/bin/phpunit --coverage-clover=coverage.xml
  # Coverage check
  - vendor/bin/coverage-check coverage.xml 100 --only-percentage
  # PHPStan analysis
  - ./vendor/bin/phpstan analyse